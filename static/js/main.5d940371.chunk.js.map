{"version":3,"sources":["components/RecipeCard/RecipeCard.js","store.js","components/Home/Home.js","components/Name/Name.js","components/Author/Author.js","components/Ingredients/Ingredients.js","components/Instructions/Instructions.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["RecipeCard","props","name","category","authorFirst","authorLast","ingredients","instructions","ingredientsDisplay","map","ingredient","i","react_default","a","createElement","key","instructionsDisplay","instruction","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","initialState","recipes","UPDATE_NAME","UPDATE_CATEGORY","UPDATE_AUTHOR_FIRST","UPDATE_AUTHOR_LAST","ADD_INGREDIENT","ADD_INSTRUCTION","ADD_RECIPE","RESET_INPUTS","createStore","state","arguments","length","undefined","action","type","payload","Object","objectSpread","newIngredients","concat","toConsumableArray","newInstructions","recipe","newRecipes","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reduxState","store","getState","components_RecipeCard_RecipeCard","Link","to","Component","Name","nameVal","setState","catVal","dispatch","_this2","value","onChange","e","handleNameChange","target","handleCategoryChange","onClick","saveChanges","Author","handleAuthorFirstChange","handleAuthorLastChange","Ingredients","input","subscribe","val","_this3","handleChange","addIngredient","Instructions","addInstruction","create","routes","Switch","Route","exact","path","component","App","HashRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d940371.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./RecipeCard.css\";\n\nlet RecipeCard = props => {\n  const {\n    name,\n    category,\n    authorFirst,\n    authorLast,\n    ingredients,\n    instructions\n  } = props;\n  const ingredientsDisplay = ingredients.map((ingredient, i) => {\n    return <li key={i}>{ingredient}</li>;\n  });\n  const instructionsDisplay = instructions.map((instruction, i) => {\n    return <li key={i}>{instruction}</li>;\n  });\n  return (\n    <div className=\"RecipeCard\">\n      <div className=\"title_container\">\n        <h2>{name}</h2>\n        <p>#{category}</p>\n      </div>\n      <p>\n        by {authorFirst} {authorLast}\n      </p>\n      <h3>Ingredients</h3>\n      <div className=\"scroll_container\">\n        <ul className=\"list\">{ingredientsDisplay}</ul>\n      </div>\n      <h3>Instructions</h3>\n      <div className=\"scroll_container\">\n        <ol className=\"list\">{instructionsDisplay}</ol>\n      </div>\n      <svg\n        className=\"delete\"\n        width=\"60\"\n        height=\"60\"\n        viewBox=\"0 0 60 60\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M2.35352 57.3536L57.3535 3.3409M2.35352 2.64648L57.3535 56.6592\"\n          stroke=\"#FF9B42\"\n          strokeWidth=\"5\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default RecipeCard;\n","import { createStore } from \"redux\";\n\nconst initialState = {\n  name: \"\",\n  category: \"\",\n  authorFirst: \"\",\n  authorLast: \"\",\n  ingredients: [],\n  instructions: [],\n  recipes: []\n};\n\nexport const UPDATE_NAME = \"UPDATE_NAME\";\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\nexport const UPDATE_AUTHOR_FIRST = \"UPDATE_AUTHOR_FIRST\";\nexport const UPDATE_AUTHOR_LAST = \"UPDATE_AUTHOR_LAST\";\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const ADD_INSTRUCTION = \"ADD_INSTRUCTION\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\nexport const RESET_INPUTS = \"RESET_INPUTS\";\n\nfunction reducer(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case UPDATE_NAME:\n      return { ...state, name: payload };\n    case UPDATE_CATEGORY:\n      return { ...state, category: payload };\n    case UPDATE_AUTHOR_FIRST:\n      return { ...state, authorFirst: payload };\n    case UPDATE_AUTHOR_LAST:\n      return { ...state, authorLast: payload };\n    case ADD_INGREDIENT:\n      const newIngredients = [...state.ingredients, payload];\n      return { ...state, ingredients: newIngredients };\n    case ADD_INSTRUCTION:\n      const newInstructions = [...state.instructions, payload];\n      return { ...state, instructions: newInstructions };\n    case ADD_RECIPE:\n      const {\n        name,\n        category,\n        authorFirst,\n        authorLast,\n        ingredients,\n        instructions\n      } = state;\n      const recipe = {\n        name,\n        category,\n        authorFirst,\n        authorLast,\n        ingredients,\n        instructions\n      };\n      const newRecipes = [...state.recipes, recipe];\n      return { ...state, recipes: newRecipes };\n    case RESET_INPUTS:\n      return {\n        ...state,\n        name: \"\",\n        category: \"\",\n        authorFirst: \"\",\n        authorLast: \"\",\n        ingredients: [],\n        instructions: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport default createStore(reducer);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RecipeCard from \"./../RecipeCard/RecipeCard\";\nimport store from \"./../../store\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    const reduxState = store.getState();\n    this.state = {\n      recipes: reduxState.recipes\n    };\n  }\n\n  render() {\n    const recipes = this.state.recipes.map((recipe, i) => {\n      return (\n        <RecipeCard\n          key={i}\n          name={recipe.name}\n          category={recipe.category}\n          authorFirst={recipe.authorFirst}\n          authorLast={recipe.authorLast}\n          ingredients={recipe.ingredients}\n          instructions={recipe.instructions}\n        />\n      );\n    });\n    return (\n      <div className=\"Home\">\n        <Link to=\"/add/name\">\n          <button>Create New Recipe</button>\n        </Link>\n        <div className=\"card_container\">{recipes}</div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport store, { UPDATE_NAME, UPDATE_CATEGORY } from \"./../../store\";\nimport \"./Name.css\";\n\nclass Name extends Component {\n  constructor(props) {\n    super(props);\n    const reduxState = store.getState();\n    this.state = {\n      name: reduxState.name,\n      category: reduxState.category\n    };\n  }\n  handleNameChange(nameVal) {\n    this.setState({\n      name: nameVal\n    });\n  }\n\n  handleCategoryChange(catVal) {\n    this.setState({\n      category: catVal\n    });\n  }\n  saveChanges() {\n    store.dispatch({\n      type: UPDATE_NAME,\n      payload: this.state.name\n    });\n    store.dispatch({\n      type: UPDATE_CATEGORY,\n      payload: this.state.category\n    });\n  }\n  render() {\n    return (\n      <div className=\"Name forms\">\n        <div className=\"input_container\">\n          <h2>Recipe Name:</h2>\n          <input\n            value={this.state.name}\n            onChange={e => this.handleNameChange(e.target.value)}\n          />\n        </div>\n        <div className=\"input_container\">\n          <h2>Category:</h2>\n          <select\n            value={this.state.category}\n            onChange={e => this.handleCategoryChange(e.target.value)}\n          >\n            <option value={\"\"}>----</option>\n            <option value={\"Breakfast\"}>Breakfast</option>\n            <option value={\"Second Breakfast\"}>Second Breakfast</option>\n            <option value={\"Brunch\"}>Brunch</option>\n            <option value={\"Lunch\"}>Lunch</option>\n            <option value={\"Dinner\"}>Dinner</option>\n            <option value={\"Drinks\"}>Drinks</option>\n            <option value={\"Dessert\"}>Dessert</option>\n          </select>\n        </div>\n        <Link to=\"/add/author\">\n          <button onClick={() => this.saveChanges()} className=\"right_button\">\n            Next\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Name;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport store, { UPDATE_AUTHOR_FIRST, UPDATE_AUTHOR_LAST } from \"./../../store\";\nimport './Author.css';\n\nclass Author extends Component {\n  constructor(props) {\n    super(props);\n    const reduxState = store.getState();\n    this.state = {\n      authorFirst: reduxState.authorFirst,\n      authorLast: reduxState.authorLast\n    };\n  }\n\n  handleAuthorFirstChange(nameVal) {\n    this.setState({\n      authorFirst: nameVal\n    });\n  }\n\n  handleAuthorLastChange(nameVal) {\n    this.setState({\n      authorLast: nameVal\n    });\n  }\n  saveChanges() {\n    store.dispatch({\n      type: UPDATE_AUTHOR_FIRST,\n      payload: this.state.authorFirst\n    });\n    store.dispatch({\n      type: UPDATE_AUTHOR_LAST,\n      payload: this.state.authorLast\n    });\n  }\n  render() {\n    return (\n      <div className=\"Author forms\">\n        <div className=\"input_container\">\n          <h2>Author First Name:</h2>\n          <input\n            value={this.state.authorFirst}\n            onChange={e => this.handleAuthorFirstChange(e.target.value)}\n          />\n        </div>\n        <div className=\"input_container\">\n          <h2>Author Last Name:</h2>\n          <input\n            value={this.state.authorLast}\n            onChange={e => this.handleAuthorLastChange(e.target.value)}\n          />\n        </div>\n        <Link to=\"/add/name\">\n          <button onClick={() => this.saveChanges()} className=\"left_button\">\n            Previous\n          </button>\n        </Link>\n        <Link to=\"/add/ingredients\">\n          <button onClick={() => this.saveChanges()} className=\"right_button\">\n            Next\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Author;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport store, { ADD_INGREDIENT } from \"./../../store\";\n\nclass Ingredients extends Component {\n  constructor(props) {\n    super(props);\n    const reduxState = store.getState();\n    this.state = {\n      ingredients: reduxState.ingredients,\n      input: \"\"\n    };\n  }\n  componentDidMount() {\n    store.subscribe(() => {\n      const reduxState = store.getState();\n      this.setState({\n        ingredients: reduxState.ingredients\n      });\n    });\n  }\n  handleChange(val) {\n    this.setState({\n      input: val\n    });\n  }\n  addIngredient() {\n    store.dispatch({\n      type: ADD_INGREDIENT,\n      payload: this.state.input\n    });\n    this.setState({\n      input: \"\"\n    });\n  }\n  render() {\n    const ingredients = this.state.ingredients.map((ingredient, i) => {\n      return <li key={i}>{ingredient}</li>;\n    });\n    return (\n      <div className=\"List forms\">\n        <h2>Ingredients:</h2>\n        <div className=\"form_items_container\">\n          <ul className='list'>{ingredients}</ul>\n        </div>\n        <div className=\"add_container\">\n          <input\n            value={this.state.input}\n            onChange={e => this.handleChange(e.target.value)}\n          />\n          <button\n            className=\"add_button\"\n            onClick={() => this.addIngredient()}\n          >\n            Add Ingredient\n          </button>\n        </div>\n        <Link to=\"/add/author\">\n          <button className=\"left_button\">Previous</button>\n        </Link>\n        <Link to=\"/add/instructions\">\n          <button className=\"right_button\">Next</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Ingredients;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport store, { ADD_INSTRUCTION, ADD_RECIPE, RESET_INPUTS } from \"./../../store\";\n\nclass Instructions extends Component {\n  constructor(props) {\n    super(props);\n    const reduxState = store.getState();\n    this.state = {\n      instructions: reduxState.instructions,\n      input: \"\"\n    };\n  }\n  componentDidMount() {\n    store.subscribe(() => {\n      const reduxState = store.getState();\n      this.setState({\n        instructions: reduxState.instructions\n      });\n    });\n  }\n  handleChange(val) {\n    this.setState({\n      input: val\n    });\n  }\n  addInstruction() {\n    store.dispatch({\n      type: ADD_INSTRUCTION,\n      payload: this.state.input\n    });\n    this.setState({\n      input: \"\"\n    });\n  }\n  create() {\n    store.dispatch({\n      type: ADD_RECIPE\n    });\n    store.dispatch({\n      type: RESET_INPUTS\n    })\n  }\n  render() {\n    const instructions = this.state.instructions.map((instruction, i) => {\n      return <li key={i}>{instruction}</li>;\n    });\n    return (\n      <div className=\"List forms\">\n        <h2>Instructions:</h2>\n        <div className=\"form_items_container\">\n          <ol className='list'>{instructions}</ol>\n        </div>\n        <div className=\"add_container\">\n          <input\n            value={this.state.input}\n            onChange={e => this.handleChange(e.target.value)}\n          />\n          <button className=\"add_button\" onClick={() => this.addInstruction()}>\n            Add Instruction\n          </button>\n        </div>\n        <Link to=\"/add/ingredients\">\n          <button className='left_button'>Previous</button>\n        </Link>\n        <Link to=\"/\">\n          <button className='right_button' onClick={() => this.create()}>Create</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport Name from \"./components/Name/Name\";\nimport Author from \"./components/Author/Author\";\nimport Ingredients from \"./components/Ingredients/Ingredients\";\nimport Instructions from './components/Instructions/Instructions';\n\n\nexport default (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/add/name\" component={Name} />\n    <Route path=\"/add/author\" component={Author} />\n    <Route path=\"/add/ingredients\" component={Ingredients} />\n    <Route path=\"/add/instructions\" component={Instructions} />\n  </Switch>\n);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"./reset.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header>\n            <h1>Recipe Cards</h1>\n          </header>\n          {routes}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./reset.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}